<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="TP8.ItemDetailFlipViewPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TP8"
    xmlns:common="using:TP8.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!-- Note that 5 buttons is max in snapped/narrow view (or 10 if using 2 rows) -->
    <!-- Supposely MS App Labs 8.0 guidance says put the home button in the bottom bar, but for 8.1 we prefer top except if too many, as here -->
    <!-- Note that for non-standard glyths, just saying Icon="&#x2705" or Icon="✅" will give runtime XAML parsing error -->
    <!-- Don't need checklist button on checklist page-->
    <!-- CommandBar will handle layout, automagically switch between normal & small size appbarbutton glyths, with & without titles beneath -->

    <Page.TopAppBar>
        <CommandBar>
            <AppBarButton Label="Checklist" Click="Checklist_Click">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe UI Symbol" Glyph="✅" />
                    <!-- Glyph="&#x2705;" Unicode WHITE HEAVY CHECK MARK character-->
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="New Report" Click="New_Click">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe UI Symbol" Glyph="🚑" />
                    <!--Glyph="&#x1F691;" Unicode AMBULANCE character -->
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="All Stations" Click="AllStations_Click">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe UI Symbol" Glyph="👪" />
                    <!-- Glyph="&#x1F46A;" Unicode FAMILY character -->
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="Outbox" Click="Outbox_Click">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe UI Symbol" Glyph="📮" />
                    <!-- Glyph="&#x1F4EE;"  Unicode POSTBOX character -->
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Label="Statistics" Click="Statistics_Click">
                <AppBarButton.Icon>
                    <FontIcon FontFamily="Segoe UI Symbol" Glyph="📊" />
                    <!-- Glyph="&#x1F4CA;"  Unicode BAR CHART character-->
                </AppBarButton.Icon>
            </AppBarButton>
        </CommandBar>
    </Page.TopAppBar>

    <Page.BottomAppBar>
        <CommandBar>
            <CommandBar.SecondaryCommands>
                <AppBarButton Label="Home" Icon="Home" Click="Home_Click"/>
            </CommandBar.SecondaryCommands>
            <AppBarButton Label="Discard" Icon="Delete" Click="Discard_Click" />
            <!-- Maybe this should be Clear Entry, Delete-->
            <AppBarButton Label="Edit" Icon="Edit" Click="Edit_Click"/>
        </CommandBar>
    </Page.BottomAppBar>
    <!-- OLD Win 8.0 -->
    <!-- Loaded/Unloaded calls are needed to get auto-resizing (and suppression of text) to work in snapped view. Lets app buttons know about state changes -->
    <!-- but doesn't do design view right -->
    <!--
    <Page.TopAppBar>
        <AppBar x:Name="TopAppBarNewReportPage" Padding="10,0,10,0" FontFamily="Global User Interface" AutomationProperties.Name="Top App Bar New Report Page">
            <Grid>
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Style="{StaticResource ChecklistAppBarButtonStyle}" Tag="Checklist" Click="Checklist_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource NewReportAppBarButtonStyle}" Tag="New" Click="New_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource AllStationsAppBarButtonStyle}" Tag="AllStations" Click="AllStations_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource OutboxAppBarButtonStyle}" Tag="Outbox" Click="Outbox_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource StatisticsAppBarButtonStyle}" Tag="Statistics" Click="Statistics_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.TopAppBar>

    <Page.BottomAppBar>
        <AppBar x:Name="BottomAppBarNewReport" Padding="10,0,10,0" FontFamily="Global User Interface" AutomationProperties.Name="Bottom App Bar New Report">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="BottomAppBarLeftPanel" Grid.Column="0" HorizontalAlignment="Left" Orientation="Horizontal">
                    <Button Style="{StaticResource HomeAppBarButtonStyle}" Tag="Home" Click="Home_Click" Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                </StackPanel>
                <StackPanel x:Name="BottomAppBarRightPanel" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="ClearEntry" Style="{StaticResource DiscardAppBarButtonStyle}" Tag="Discard" Click="Discard_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button x:Name="Edit" Style="{StaticResource EditAppBarButtonStyle}" Tag="Edit" Click="Edit_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar> -->

    <Page.Resources>

        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}"/>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

         <TextBlock x:Name="SubtitleWithCount" Text="{Binding Path=subtitleWithCount}"  Grid.RowSpan="2" FontSize="20" FontWeight="Light" Margin="120,120,0,0"/>

            <!--
            The remainder of the page is one large FlipView that displays details for
            one item at a time, allowing the user to flip through all items in the chosen
            group
        -->
        <FlipView
            x:Name="flipView"
            Grid.RowSpan="2"
            AutomationProperties.AutomationId="ItemsFlipView"
            AutomationProperties.Name="Item Details"
            TabIndex="1"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}" 

            SelectionChanged="flipView_SelectionChanged">
            <!--             SelectedIndex="{Binding Index, Mode=TwoWay}"
            VirtualizingStackPanel.VirtualizationMode="Standard" -->
            <!-- Loaded="flipView_Loaded" > -->
            <!-- Glenn adds SelectedIndex & VirtualizationMode lines, maybe it will help -->

            <FlipView.ItemContainerStyle>
                <Style TargetType="FlipViewItem">
                    <Setter Property="Margin" Value="0,137,0,0"/>
                </Style>
            </FlipView.ItemContainerStyle>
 
            <FlipView.ItemTemplate>
                <DataTemplate>
                    <!--
                        UserControl chosen as the templated item because it supports visual state management
                        Loaded/unloaded events explicitly subscribe to view state updates from the page
                    -->
                    <!-- Glenn turns off zoom mode to see if it overcomes known bug in generating SelectionChanged event when swiping -->
                    <UserControl Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates">
                        <ScrollViewer x:Name="scrollViewer" ZoomMode="Disabled" Style="{StaticResource HorizontalScrollViewerStyle}" Grid.Row="1">

                            <!-- Content is allowed to flow across as many columns as needed -->
                            <common:RichTextColumns x:Name="richTextColumns" Margin="117,0,117,47">
                                <RichTextBlock x:Name="richTextBlock" Width="560" Style="{StaticResource BodyRichTextBlockStyle}" IsTextSelectionEnabled="False"> <!-- was ItemRichTextStyle in 8.0 -->
                                    <Paragraph>
                                        <Run FontSize="26.667" FontWeight="Light" Text="{Binding Title}"/>
                                        <LineBreak/>
                                        <LineBreak/>
                                        <Run FontWeight="Normal" Text="{Binding Subtitle}"/>
                                    </Paragraph>
                                    <Paragraph LineStackingStrategy="MaxHeight">
                                        <InlineUIContainer>
                                            <Border Margin="0,20,0,10" MaxHeight="480" MinHeight="100" MinWidth="100"
                                                BorderThickness="3" BorderBrush="{Binding ImageBorderColor}" ><!-- Glenn adds border color & border itself -->
                                                <Image x:Name="image" Source="{Binding Image}" Stretch="Uniform" AutomationProperties.Name="{Binding Title}"/>
                                            </Border>
                                            <!-- was: <Image x:Name="image" MaxHeight="480" Margin="0,20,0,10" Stretch="Uniform" Source="{Binding Image}" AutomationProperties.Name="{Binding Title}"/> -->
                                        </InlineUIContainer>
                                    </Paragraph>
                                    <Paragraph>
                                        <Run FontWeight="SemiLight" Text="{Binding Content}"/>
                                    </Paragraph>
                                </RichTextBlock>

                                <!-- Additional columns are created from this template -->
                                <common:RichTextColumns.ColumnTemplate>
                                    <DataTemplate>
                                        <RichTextBlockOverflow Width="560" Margin="80,0,0,0">
                                            <RichTextBlockOverflow.RenderTransform>
                                                <TranslateTransform X="-1" Y="4"/>
                                            </RichTextBlockOverflow.RenderTransform>
                                        </RichTextBlockOverflow>
                                    </DataTemplate>
                                </common:RichTextColumns.ColumnTemplate>
                            </common:RichTextColumns>

                            <VisualStateManager.VisualStateGroups>

                                <!-- Visual states reflect the application's view state inside the FlipView -->
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullScreenLandscape"/>
                                    <VisualState x:Name="Filled"/>

                                    <!-- Respect the narrower 100-pixel margin convention for portrait -->
                                    <VisualState x:Name="FullScreenPortrait">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="97,0,87,57"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="MaxHeight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="400"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- When snapped, the content is reformatted and scrolls vertically -->
                                    <VisualState x:Name="Snapped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="17,0,17,57"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Style">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VerticalScrollViewerStyle}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextBlock" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="280"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="MaxHeight">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="160"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </ScrollViewer>
                    </UserControl>
                </DataTemplate>
            </FlipView.ItemTemplate>
        </FlipView>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource TitleBackButtonStyle}"/>
            <!-- Before Feb 2015, was Win8.0 BackButtonStyle -->
            <TextBlock x:Name="pageTitle" Text="{Binding Group.Title}" Style="{StaticResource PageHeaderTextBlockStyle}" Grid.Column="1" IsHitTestVisible="false"/>
            <!-- WAS BEFORE FEB 2015: PageHeaderTextStyle-->
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The back button respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitTitleBackButtonStyle}"/>
                            <!-- Before Feb 2015, was Win8.0 PortraitBackButtonStyle -->
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource NarrowTitleBackButtonStyle}"/>
                            <!-- Before Feb 2015, was Win8.0 SnappedBackButtonStyle -->
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource NarrowPageHeaderTextBlockStyle}"/>
                            <!-- WAS BEFORE FEB 2015: SnappedPageHeaderTextStyle-->
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
