<common:LayoutAwarePage
    x:Name="pageChecklist"
    x:Class="TP8.BasicPageChecklist"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TP8"
    xmlns:common="using:TP8.Common"
    xmlns:data="using:TP8.Data"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <!-- Loaded/Unloaded calls are needed to get auto-resizing (and suppression of text) to work in snapped view. Lets app buttons know about state changes -->
    <!-- but doesn't do design view right -->
    <!-- Note that 5 buttons is max in snapped view (or 10 if using 2 rows) -->
    <!-- Supposely MS App Labs says put the home button in the bottom bar -->
    <Page.TopAppBar>
        <AppBar x:Name="TopAppBarChecklistPage" Padding="10,0,10,0" FontFamily="Global User Interface" AutomationProperties.Name="Top App Bar New Report Page">
            <Grid>
                <!--
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal"> -->
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Style="{StaticResource ChecklistAppBarButtonStyle}" Tag="Checklist" Click="Checklist_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource NewReportAppBarButtonStyle}" Tag="New" Click="New_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource AllStationsAppBarButtonStyle}" Tag="AllStations" Click="AllStations_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource OutboxAppBarButtonStyle}" Tag="Outbox" Click="Outbox_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                    <Button Style="{StaticResource StatisticsAppBarButtonStyle}" Tag="Statistics" Click="Statistics_Click"  Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.TopAppBar>

    <Page.BottomAppBar>
        <AppBar x:Name="BottomAppBarChecklistPage" Padding="10,0,10,0" FontFamily="Global User Interface" AutomationProperties.Name="Bottom App Bar New Report">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="50*"/>
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="BottomAppBarLeftPanel" Grid.Column="0" HorizontalAlignment="Left" Orientation="Horizontal">
                    <Button Style="{StaticResource HomeAppBarButtonStyle}" Tag="Home" Click="Home_Click" Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates"/>
                </StackPanel>
                <StackPanel x:Name="BottomAppBarRightPanel" Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                </StackPanel>
            </Grid>
        </AppBar>
    </Page.BottomAppBar>





    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <!--<x:String x:Key="AppName">My Application</x:String>-->
        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}" />
        <!-- d:Source="{Binding AllGroups[0].Items, Source={d:DesignInstance Type=data:SampleDataSource, IsDesignTimeCreatable=True}}"/> -->
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid
        DataContext="{Binding Group}"
        Style="{StaticResource LayoutRootStyle}">
        <!-- d:DataContext="{Binding AllGroups[0], Source={d:DesignInstance Type=data:SampleDataSource, IsDesignTimeCreatable=True}}" > -->
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageChecklist}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="✅  Checklist" Style="{StaticResource PageHeaderTextStyle}"/>
        </Grid>
        <StackPanel x:Name="mainBox" Grid.Row="1" Width="566" Margin="0,50">
            <TextBlock x:Name="DisasterEvent" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Disaster Event:" VerticalAlignment="Top" Width="240" FontSize="30"/>
            <StackPanel Orientation="Horizontal">
                <Image HorizontalAlignment="Left" Margin="50,5,10,5" Source="Assets/yellow_diamond.png" Stretch="None"/>
                <TextBlock HorizontalAlignment="Left" Margin="0,5,0,0" Height="20" Text="Test, demo, or drill" FontSize="15" />
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Image HorizontalAlignment="Left" Margin="50,5,10,10" Source="Assets/yellow_outlined_diamond.png" Stretch="None"/>
                <TextBlock HorizontalAlignment="Left" Margin="0,0,0,0" Height="20" Text="Real - not a drill" FontSize="15" />
            </StackPanel>
            <!-- Could never get EventComboBox with DataTemplate to not clobber source list.  Give up, use EventListView inside ScrollViewer.  Don't know if Mode=OneTime necessary -->
            <ScrollViewer MinHeight="160" MaxHeight="320" Height="180" BorderThickness="2" BorderBrush="#FFFFFDFD" AllowDrop="True">
                <ListView x:Name="EventListView" HorizontalAlignment="Left" VerticalAlignment="Top" Width="566" SelectionChanged="EventListView_SelectionChanged" AllowDrop="True" MinHeight="40">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <Image x:Name="EventComboBoxImage" Source="{Binding Path=TypeIconUri, Mode=OneTime}" Margin="2,0,4,0"/>
                                <TextBlock x:Name="EventComboBoxTextBlock" Text="{Binding Path=EventName, Mode=OneTime}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ScrollViewer>
            <StackPanel Orientation="Horizontal" MinHeight="15" Margin="0,5,0,0">
                <TextBlock x:Name="gettingAllStationsReports" Text="" Width="383" Visibility="Collapsed"/>
                <ProgressBar x:Name="progressBarChangedEvent" Height="15" Width="183"
                         RenderTransformOrigin="0.5,0.5" IsEnabled="False" IsDoubleTapEnabled="False" IsHoldingEnabled="False" IsRightTapEnabled="False" IsTapEnabled="False" IsIndeterminate="True" Visibility="Collapsed">
                    <ProgressBar.RenderTransform>
                        <CompositeTransform ScaleY="-1"/>
                    </ProgressBar.RenderTransform>
                </ProgressBar>
            </StackPanel>
            <TextBlock x:Name="DebugEventsList" Text="[events]" Height="30" Visibility="Collapsed"/> <!-- make visible here if used during debug -->
            <TextBlock x:Name="RosterName" HorizontalAlignment="Left" Margin="0,10,0,0" TextWrapping="Wrap" Text="Roster Name(s):" VerticalAlignment="Top" Width="240" FontSize="30"/>
            <Button x:Name="Pick" Content="Pick from My Contacts" HorizontalAlignment="Left" Margin="50,0,0,10" VerticalAlignment="Top" Click="PickButton_Click" FontSize="15"/>
            <TextBox x:Name="RosterTextBox" HorizontalAlignment="Left" TextWrapping="Wrap" Width="566" Height="131" VerticalAlignment="Top" AcceptsReturn="True" TextChanged="RosterNameTextBox_TextChanged"/>
        </StackPanel>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicatgionViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped.  Snapped = 320 width -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="mainBox" Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Thickness>4,177,4,0</Thickness>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="EventComboBox" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="312"/>
                            <!-- 320 minus two size 4 margins -->
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
