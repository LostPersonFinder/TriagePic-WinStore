<common:LayoutAwarePage
    x:Name="pageCharts"
    x:Class="TP8.ChartsFlipPage"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:WinRTXamlToolkit.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:TP8"
    xmlns:common="using:TP8.Common"
    xmlns:data="using:TP8.Data"
    mc:Ignorable="d"
    xmlns:vis="using:WinRTXamlToolkit.Controls.DataVisualization"
    xmlns:charting="using:WinRTXamlToolkit.Controls.DataVisualization.Charting"
    xmlns:Series="using:WinRTXamlToolkit.Controls.DataVisualization.Charting">
    <!-- Adapted from "WinRTXamlToolkit.Sample.Views.ChartsTestPage" -->
    <!-- Was <controls:AlternativePage -->

    <common:LayoutAwarePage.Resources>
        <Style x:Key="charting:ZonePalette" TargetType="charting:Chart">
            <Setter Property="Palette">
                <Setter.Value>
                    <charting:ResourceDictionaryCollection>
                        <!-- Lime for triage zone Green -->
                        <!-- Blue was #4586d8-->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="Lime" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                            <!-- Might be useful in future; replicate for every defined color:
                                            <Style x:Key="DataShapeStyle" TargetType="Shape">
                                                <Setter Property="Stroke" Value="{StaticResource Background}" />
                                                <Setter Property="StrokeThickness" Value="2" />
                                                <Setter Property="StrokeMiterLimit" Value="1" />
                                                <Setter Property="Fill" Value="{StaticResource Background}" />
                                            </Style> -->
                        </ResourceDictionary>
                        <!-- PaleGreen for triage zone BH Green -->
                        <!-- was Red with Color="#dc443f" -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="PaleGreen" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <!-- Yellow -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="Yellow" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <!-- Red -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="Red" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <!-- DarkGray for triage zone gray -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="DarkGray" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <!-- Black -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="Black" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                    </charting:ResourceDictionaryCollection>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="charting:GenderPalette" TargetType="charting:Chart">
            <Setter Property="Palette">
                <Setter.Value>
                    <charting:ResourceDictionaryCollection>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="Blue" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="Pink" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="Tan" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="Purple" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                    </charting:ResourceDictionaryCollection>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="charting:AgeGroupPalette" TargetType="charting:Chart">
            <Setter Property="Palette">
                <Setter.Value>
                    <charting:ResourceDictionaryCollection>
                        <!-- Brown for adult -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="Brown" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <!-- Teal for pediatric -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="Teal" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <!-- Tan for unknown -->
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="Tan" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                    </charting:ResourceDictionaryCollection>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="charting:MiscellaneousPalette" TargetType="charting:Chart">
            <Setter Property="Palette">
                <Setter.Value>
                    <charting:ResourceDictionaryCollection>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="Aqua" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="PaleGoldenrod" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="DarkCyan" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="Indigo" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="Firebrick" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="CornflowerBlue" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color="OrangeRed" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="SlateBlue" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="Background" Color ="LightCoral" />
                            <Style x:Key="DataPointStyle" TargetType="Control">
                                <Setter Property="Background" Value="{StaticResource Background}" />
                            </Style>
                        </ResourceDictionary>
                    </charting:ResourceDictionaryCollection>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="charting:ColorByDataColumn" TargetType="charting:BarDataPoint">
            <Setter Property="Background" Value="Red" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="charting:BarDataPoint">
                        <Grid Background="{Binding barColor}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>      
        </Style>
        
        <Style x:Key="charting:HideTicMarks" TargetType="Line">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>

        <Style x:Key="charting:SuppressDataPoints" TargetType="charting:LineDataPoint">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Width" Value="0" />
            <Setter Property="Height" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="charting:LineDataPoint">
                        <Grid x:Name="Root" Opacity="0" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </common:LayoutAwarePage.Resources>

    <Grid
        Background="{StaticResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition
                Height="140" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="120" />
            <ColumnDefinition
                Width="*" />
            <ColumnDefinition
                Width="120" />
        </Grid.ColumnDefinitions>
        <controls:CustomAppBar
            Grid.Row="1"
            VerticalAlignment="Bottom">
            <StackPanel
                Orientation="Horizontal">
                <Button
                    Content="Update"
                    Click="OnUpdateButtonClick"/>
            </StackPanel>
        </controls:CustomAppBar>
        <Button
            x:Name="BackButton"
            Style="{StaticResource BackButtonStyle}"
            Click="GoBack" />
        <TextBlock
            Text="📊  Statistics"
            Grid.Column="1"
            Style="{StaticResource PageHeaderTextStyle}" />

        <FlipView
            Grid.Column="1"
            Grid.Row="1">
            <Viewbox>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="1" Grid.Column="0" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="1" Grid.Column="1" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="2" Grid.Column="0" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="2" Grid.Column="1" />
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Arrivals through this Station, All Events" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center"/>
                    <charting:Chart
                    x:Name="PieChartByTriageZoneAllEvents"
                    Title="By Assigned Triage Zone"
                    Margin="0,0" Grid.Column="0" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:ZonePalette}" PointerReleased="PieChartByTriageZoneAllEvents_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Triage Zone All Events"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>

                    <charting:Chart
                    x:Name="PieChartByGenderAllEvents"
                    Title="By Gender"
                    Margin="0,0" Grid.Column="1" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:GenderPalette}" PointerReleased="PieChartByGenderAllEvents_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Gender All Events"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>

                    <charting:Chart
                    x:Name="PieChartByAgeGroupAllEvents"
                    Title="By Age Group"
                    Margin="0,0" Grid.Column="0" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:AgeGroupPalette}" PointerReleased="PieChartByAgeGroupAllEvents_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Age Group All Events"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>

                    <charting:Chart
                    x:Name="PieChartByEventAllEvents"
                    Title="By Event"
                    Margin="0,0" Grid.Column="1" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:MiscellaneousPalette}" PointerReleased="PieChartByEventAllEvents_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Event All Events"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>
                </Grid>
            </Viewbox>
<!-- Page 2 -->
            <Viewbox>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="1" Grid.Row="1" Grid.Column="0" />
                    <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="1" Grid.Row="1" Grid.Column="1" />
                    <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="1" Grid.Row="2" Grid.Column="0" />
                    <Border BorderBrush="{StaticResource ApplicationForegroundThemeBrush}" BorderThickness="1" Grid.Row="2" Grid.Column="1" />
                    <TextBlock x:Name="PiesForCurrentEvent" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Arrivals through this Station, Current Event" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center"/>

                    <charting:Chart
                    x:Name="PieChartByTriageZoneCurrentEvent"
                    Title="By Assigned Triage Zone"
                    Margin="0,0" Grid.Column="0" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:ZonePalette}" PointerReleased="PieChartByTriageZoneCurrentEvent_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Triage Zone Current Event"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>

                    <charting:Chart
                    x:Name="PieChartByGenderCurrentEvent"
                    Title="By Gender"
                    Margin="0,0" Grid.Column="1" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:GenderPalette}" PointerReleased="PieChartByGenderCurrentEvent_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Gender Current Event"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>

                    <charting:Chart
                    x:Name="PieChartByAgeGroupCurrentEvent"
                    Title="By Age Group"
                    Margin="0,0" Grid.Column="0" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:AgeGroupPalette}" PointerReleased="PieChartByAgeGroupCurrentEvent_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Age Group Current Event"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>

                    <charting:Chart
                    x:Name="PieChartByDateCurrentEvent"
                    Title="By Date [year-month-day]"
                    Margin="0,0" Grid.Column="1" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center"
                    Style="{StaticResource charting:MiscellaneousPalette}" PointerReleased="PieChartByDateCurrentEvent_PointerReleased">
                        <charting:Chart.Series>
                            <Series:PieSeries
                            Title="By Date Current Event"
                            ItemsSource="{Binding Items}"
                            IndependentValueBinding="{Binding Name}"
                            DependentValueBinding="{Binding Value}"
                            IsSelectionEnabled="True" />
                        </charting:Chart.Series>
                    </charting:Chart>
                </Grid>
            </Viewbox>
<!--Page 3 -->
            <!--
            <charting:Chart
                x:Name="Chart"
                Title="Column Chart"
                Margin="70,0">
                <charting:Chart.Series>
                    <charting:ColumnSeries
                        Title="Population"
                        ItemsSource="{Binding Items}"
                        IndependentValueBinding="{Binding Name}"
                        DependentValueBinding="{Binding Value}"
                        IsSelectionEnabled="True" />
                </charting:Chart.Series>
            </charting:Chart> -->

            <Viewbox>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="1" Grid.Column="0" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="1" Grid.Column="1" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="2" Grid.Column="0" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="2" Grid.Column="1" />
                    <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Arrivals through this Station, All Events"
                               FontSize="20" FontWeight="Bold" HorizontalAlignment="Center"/>
                    
                    <charting:Chart
                    x:Name="BarChartByTriageZoneAllEvents"
                    Title="By Assigned Triage Zone"
                    Margin="0,0" Grid.Column="0" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="FrameworkElement">  <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                        <!--Should work but doesn't.  Reports say use code-behind instead:
                        <charting:Chart.Axes>
                            <charting:LinearAxis Orientation="X"  Interval="1" />
                        </charting:Chart.Axes> -->
                        <charting:BarSeries
                            Title="Zones"
                            IndependentValueBinding="{Binding Path=barName}"
                            DependentValueBinding="{Binding Path=barCount}"
                            DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                            IsSelectionEnabled="True" />
                    </charting:Chart>

                    <charting:Chart
                    x:Name="BarChartByGenderAllEvents"
                    Title="By Gender"
                    Margin="0,0" Grid.Column="1" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="FrameworkElement">
                                <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                            <!--Should work but doesn't.  Reports say use code-behind instead:
                        <charting:Chart.Axes>
                            <charting:LinearAxis Orientation="X"  Interval="1" />
                        </charting:Chart.Axes> -->
                        <charting:BarSeries
                        Title="Gender"
                        IndependentValueBinding="{Binding Path=barName}"
                        DependentValueBinding="{Binding Path=barCount}"
                        DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                        IsSelectionEnabled="True" />
                    </charting:Chart>

                    <charting:Chart
                    x:Name="BarChartByAgeGroupAllEvents"
                    Title="By Age Group"
                    Margin="0,0" Grid.Column="0" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="FrameworkElement">
                                <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                        <!--Should work but doesn't.  Reports say use code-behind instead:
                    <charting:Chart.Axes>
                        <charting:LinearAxis Orientation="X"  Interval="1" />
                    </charting:Chart.Axes> -->
                        <charting:BarSeries
                        Title="Age Groups"
                        IndependentValueBinding="{Binding Path=barName}"
                        DependentValueBinding="{Binding Path=barCount}"
                        DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                        IsSelectionEnabled="True" />
                    </charting:Chart>

                    <charting:Chart
                    x:Name="BarChartByEventAllEvents"
                    Title="By Event"
                    Margin="0,0" Grid.Column="1" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="FrameworkElement">
                                <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                        <!--Should work but doesn't.  Reports say use code-behind instead:
                    <charting:Chart.Axes>
                        <charting:LinearAxis Orientation="X"  Interval="1" />
                    </charting:Chart.Axes> -->
                        <charting:BarSeries
                        Title="Events"
                        IndependentValueBinding="{Binding Path=barName}"
                        DependentValueBinding="{Binding Path=barCount}"
                        DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                        IsSelectionEnabled="True" />
                    </charting:Chart>
                </Grid>
            </Viewbox>

<!-- Page 4 -->
            <Viewbox>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="1" Grid.Column="0" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="1" Grid.Column="1" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="2" Grid.Column="0" />
                    <Border BorderBrush="White" BorderThickness="1" Grid.Row="2" Grid.Column="1" />
                    <TextBlock x:Name="BarsForCurrentEvent" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Arrivals through this Station, Current Event"
                               FontSize="20" FontWeight="Bold" HorizontalAlignment="Center"/>

                    <charting:Chart
                    x:Name="BarChartByTriageZoneCurrentEvent"
                    Title="By Assigned Triage Zone"
                    Margin="0,0" Grid.Column="0" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="FrameworkElement">
                                <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                        <!--Should work but doesn't.  Reports say use code-behind instead:
                        <charting:Chart.Axes>
                            <charting:LinearAxis Orientation="X"  Interval="1" />
                        </charting:Chart.Axes> -->
                        <charting:BarSeries
                            Title="Zones"
                            IndependentValueBinding="{Binding Path=barName}"
                            DependentValueBinding="{Binding Path=barCount}"
                            DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                            IsSelectionEnabled="True" />
                    </charting:Chart>

                    <charting:Chart
                    x:Name="BarChartByGenderCurrentEvent"
                    Title="By Gender"
                    Margin="0,0" Grid.Column="1" Grid.Row="1" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="FrameworkElement">
                                <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                        <!--Should work but doesn't.  Reports say use code-behind instead:
                        <charting:Chart.Axes>
                            <charting:LinearAxis Orientation="X"  Interval="1" />
                        </charting:Chart.Axes> -->
                        <charting:BarSeries
                        Title="Gender"
                        IndependentValueBinding="{Binding Path=barName}"
                        DependentValueBinding="{Binding Path=barCount}"
                        DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                        IsSelectionEnabled="True" />
                    </charting:Chart>

                    <charting:Chart
                    x:Name="BarChartByAgeGroupCurrentEvent"
                    Title="By Age Group"
                    Margin="0,0" Grid.Column="0" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="FrameworkElement">
                                <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                        <!--Should work but doesn't.  Reports say use code-behind instead:
                    <charting:Chart.Axes>
                        <charting:LinearAxis Orientation="X"  Interval="1" />
                    </charting:Chart.Axes> -->
                        <charting:BarSeries
                        Title="Age Groups"
                        IndependentValueBinding="{Binding Path=barName}"
                        DependentValueBinding="{Binding Path=barCount}"
                        DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                        IsSelectionEnabled="True" />
                    </charting:Chart>

                    <charting:Chart
                    x:Name="BarChartByDateCurrentEvent"
                    Title="By Date [year-month-day]"
                    Margin="0,0" Grid.Column="1" Grid.Row="2" MinWidth="200" HorizontalAlignment="Center" >
                        <charting:Chart.LegendStyle>
                            <Style TargetType="vis:Legend"><!--<Style TargetType="FrameworkElement"> -->
                                <!-- FrameworkElement not shown by VS Intellisense -->
                                <Setter Property="Width" Value="0" />
                                <!-- didn't work with FrameworkElement to hide useless legend: <Setter Property="Visibility" Value="Collapsed" /> -->
                            </Style>
                        </charting:Chart.LegendStyle>
                        <!--Should work but doesn't.  Reports say use code-behind instead:
                    <charting:Chart.Axes>
                        <charting:LinearAxis Orientation="X"  Interval="1" />
                    </charting:Chart.Axes> -->
                        <charting:BarSeries
                        Title="Dates"
                        IndependentValueBinding="{Binding Path=barName}"
                        DependentValueBinding="{Binding Path=barCount}"
                        DataPointStyle="{StaticResource charting:ColorByDataColumn}"
                        IsSelectionEnabled="True" />
                    </charting:Chart>
                </Grid>
            </Viewbox>
<!-- Page 5 -->
 <!--           <charting:Chart
                x:Name="LineChart"
                Title="Line Chart"
                Margin="70,0">
                <charting:LineSeries
                    Title="Population"
                    IndependentValueBinding="{Binding Name}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True" />
            </charting:Chart> -->

            <charting:Chart
                x:Name="LineChartArrivals"
                Title="Arrivals Per Day, This Station, Current Event"
                Margin="70,0">
                <charting:Chart.TitleStyle>
                    <Style TargetType="vis:Title">
                        <Setter Property="FontSize" Value="28" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                </charting:Chart.TitleStyle>
                <charting:LineSeries
                    Title="Arrivals"
                    IndependentValueBinding="{Binding DateTimeBucket}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True">
                    <charting:LineSeries.DataPointStyle> <!-- Suppress data points -->
                        <Style TargetType="charting:LineDataPoint">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="IsTabStop" Value="False" />
                            <Setter Property="Width" Value="0" />
                            <Setter Property="Height" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="charting:LineDataPoint">
                                        <Grid x:Name="Root" Opacity="0" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </charting:LineSeries.DataPointStyle>
                </charting:LineSeries>
            </charting:Chart>
            
<!-- Page 6 -->
            <charting:Chart
                x:Name="LineChartArrivalsAllStations"
                Title="Total Arrivals Per Day, This Station, All Events"
                Margin="70,0">
                <charting:Chart.TitleStyle>
                    <Style TargetType="vis:Title">
                        <Setter Property="FontSize" Value="28" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                </charting:Chart.TitleStyle>
                <charting:LineSeries
                    Title="Arrivals"
                    IndependentValueBinding="{Binding DateTimeBucket}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True"
                    DataPointStyle="{StaticResource charting:SuppressDataPoints}">
                </charting:LineSeries>
            </charting:Chart>
            
<!-- Page 7 -->
            <charting:Chart
                x:Name="LineChartArrivalsAllStations_Page7"
                Title="Arrivals Per Day, This Station, All Events (Itemized)"
                Margin="70,0">
                <charting:Chart.TitleStyle>
                    <Style TargetType="vis:Title">
                        <Setter Property="FontSize" Value="28" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="HorizontalAlignment" Value="Center" />
                    </Style>
                </charting:Chart.TitleStyle>
                <!-- data bound in code behind -->
            </charting:Chart>

<!-- Page 7 onward, not yet customized. Code in #if SHOW_EXAMPLES_NOT_YET_USED

            <charting:Chart
                x:Name="LineChart2"
                Title="Line Chart Without Data Points"
                Margin="70,0">
                <charting:LineSeries
                    Title="Population"
                    IndependentValueBinding="{Binding Name}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True">
                    <charting:LineSeries.DataPointStyle>
                        <Style
                            TargetType="charting:LineDataPoint">
                            <Setter
                                Property="BorderThickness"
                                Value="0" />
                            <Setter
                                Property="IsTabStop"
                                Value="False" />
                            <Setter
                                Property="Width"
                                Value="0" />
                            <Setter
                                Property="Height"
                                Value="0" />
                            <Setter
                                Property="Template">
                                <Setter.Value>
                                    <ControlTemplate
                                        TargetType="charting:LineDataPoint">
                                        <Grid
                                            x:Name="Root"
                                            Opacity="0" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </charting:LineSeries.DataPointStyle>
                </charting:LineSeries>
            </charting:Chart>

            <charting:Chart
                x:Name="MixedChart"
                Title="Mixed Chart"
                Margin="70,0">
                <charting:ColumnSeries
                    Title="Population"
                    ItemsSource="{Binding Items}"
                    IndependentValueBinding="{Binding Name}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True" />
                <charting:LineSeries
                    Title="Population"
                    IndependentValueBinding="{Binding Name}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True" />
            </charting:Chart>
            <charting:Chart
                x:Name="AreaChart"
                Title="Area Chart"
                Margin="70,0">
                <charting:AreaSeries
                    Title="Population"
                    IndependentValueBinding="{Binding Name}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True" />
            </charting:Chart>
            <charting:Chart
                x:Name="BubbleChart"
                Title="Bubble Chart"
                Margin="70,0">
                <charting:BubbleSeries
                    Title="Population"
                    IndependentValueBinding="{Binding Name}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True" />
            </charting:Chart>
            <charting:Chart
                x:Name="ScatterChart"
                Title="Scatter Chart"
                Margin="70,0">
                <charting:ScatterSeries
                    Title="Population"
                    IndependentValueBinding="{Binding Name}"
                    DependentValueBinding="{Binding Value}"
                    IsSelectionEnabled="True" />
            </charting:Chart>
            <charting:Chart
                x:Name="StackedBar"
                Title="Stacked Bar Chart"
                Margin="70,0">
                <charting:StackedBarSeries>
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Doodad" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Gizmo" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Widget" />
                </charting:StackedBarSeries>
            </charting:Chart>

            <charting:Chart
                x:Name="StackedBar100"
                Title="100% Stacked Bar Chart"
                Margin="70,0">
                <charting:Stacked100BarSeries>
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Doodad" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Gizmo" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Widget" />

                </charting:Stacked100BarSeries>
            </charting:Chart>

            <charting:Chart
                x:Name="StackedColumn"
                Title="Stacked Column Chart"
                Margin="70,0">
                <charting:StackedColumnSeries>
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Doodad" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Gizmo" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Widget" />
                </charting:StackedColumnSeries>
            </charting:Chart>

            <charting:Chart
                x:Name="StackedColumn100"
                Title="100% Stacked Column Chart"
                Margin="70,0">
                <Series:Stacked100ColumnSeries>
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Doodad" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Gizmo" />
                    <charting:SeriesDefinition
                        DependentValuePath="Value"
                        IndependentValuePath="Name"
                        IsTapEnabled="True"
                        Title="Widget" />
                </Series:Stacked100ColumnSeries>
            </charting:Chart>
            -->
        </FlipView>
    </Grid>
</common:LayoutAwarePage>
<!-- </controls:AlternativePage> -->